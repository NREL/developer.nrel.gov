openapi: 3.0.0
info:
  title: RouteE API
  description: 
    The Route Energy Prediction Model (RouteE) predicts the energy consumption of a given vehicle over a link or sequence of links (route) in a road network. These API endpoints can be used to get single vehicle link or route energy estimates (`/route`), energy consumption estimates for a variety of vehicles over all links in a transportation network (`/network`), and eco-routing between an origin and destination for a specific vehicle (`/compass`). For more on RouteE, please visit <https://www.nrel.gov/transportation/route-energy-prediction-model.html>.
  version: "2.0"
servers:
  - url: https://developer.nrel.gov/api/routee/v2
paths:
  /route:
    post:
      summary: Estimate energy consumption for a single route.
      requestBody:
        description: A JSON object with your real or predicted vehicle route data.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RouteRequest"
      responses:
        "200":
          description: A JSON object with the returned energy consumption estimates and metadata for the provided route.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteResponse"
  /network:
    post:
      summary: Network energy prediction
      requestBody:
        description: A JSON object with your real or predicted transportation network data.
        required: true
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/NetworkRequest"
      responses:
        "200":
          description: A JSON object with the returned energy consumption estimates and metadata for the provided network. 
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkResponse"
  /compass/beta:
    get:
      summary: Shortest energy path
      parameters:
        - in: query
          name: origin_lat
          required: true
          schema:
            type: number
          description: The origin latitude for the route
        - in: query
          name: origin_lon
          required: true
          schema:
            type: number
          description: The origin longitude for the route
        - in: query
          name: destination_lat
          required: true
          schema:
            type: number
          description: The destination latitude for the route
        - in: query
          name: destination_lon
          required: true
          schema:
            type: number
          description: The destination longitude for the route
        - in: query
          name: number_of_waypoints
          schema:
            type: integer
          description: Upper limit of waypoints to return. Default is 100
        - in: query
          name: routee_key
          schema:
            type: string
          description: Which routee model to use for energy prediction. Default is "gasoline"
      responses:
        "200":
          description: A JSON object with the waypoints for the shortest energy route
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompassResponse"
components:
  securitySchemes:
    ApiKeyQueryAuth:
      type: apiKey
      in: query
      name: api_key
    ApiKeyHeaderAuth:
      type: apiKey
      in: header
      name: X-Api-Key
  schemas: 
    RouteRequest:
      type: object
      required: [segment_ids, lengths_miles, speeds_mph, grades_percent, model]
      properties: 
        segment_ids:
          type: array
          items:
            type: string
            description: Ordered array corresponding to unique identifiers for each road segement of the route. (Such as TMC codes)
          example: ["110N04615", "110N04616", "110N04617"]
        lengths_miles:
          type: array
          items:
            type: number
            description: Ordered array corresponding to distance (in miles) of the road segment.
          example: [.12,.2,.13]
        speeds_mph:
          type: array
          items: 
            type: number
            description: Ordered array corresponding to real or predicted speed of the for the road segment.
          example: [50.3, 50.0, 47.6]
        grades_percent:
          type: array
          items:
            type: number
            description: Ordered array corresponding to floating point value representing the gradient of the road segment.
          example: [0.01, 0.02, 0.02]
        model:
          type: string
          description: Vehicle fuel type (Conventional gasoline, diesel, battery electric, and hybrid electric).
          enum: [conventional, diesel, hybrid, electric]
    NetworkRequest:
      type: object
      required: [segment_ids, lengths_miles, speeds_mph, grades_percent, volumes]
      properties:
        segment_ids:
          type: array
          items:
            type: string
            description: Ordered array corresponding to unique identifiers for each road segement of the route. (Such as TMC codes)
          example: ["110N04615", "110N04616", "110N04617"]
        lengths_miles:
          type: array
          items:
            type: number
            description: Ordered array corresponding to distance (in miles) of the road segment.
          example: [.12,.2,.13]
        speeds_mph:
          type: array
          items: 
            type: number
            description: Ordered array corresponding to real or predicted speed of the for the road segment.
          example: [50.3, 50.0, 47.6]
        grades_percent:
          type: array
          items:
            type: number
            description: Ordered array corresponding to floating point value representing the gradient of the road segment.
          example: [0.01, 0.02, 0.02]
        volumes:
          type: array
          items:
            type: number
            description: Ordered array of integer values of segement-level traffic counts.
          example: [12, 12, 11]
        gasoline_ratio:
          type: number
          description: Float value representing percentage of vehicle fleet represented by gasoline vehicles.
          example: 0.85
        diesel_ratio:
          type: number
          description: Float value representing percentage of vehicle fleet represented by diesel vehicles.
          example: 0.1
        hybrid_ratio:
          type: number
          description: Float value representing percentage of vehicle fleet represented by hybrid vehicles.
          example: 0.025
        electric_ratio:
          type: number
          description: Float value representing percentage of vehicle fleet represented by electric vehicles.
          example: 0.025
          
    RouteResponse:
      type: object
      properties:
        route:
          type: object
          properties:
            segment_ids:
              type: array
              items:
                type: string
                description: Ordered array corresponding to unique identifiers for each road segement of the route. (Such as TMC codes)
              example: ["110N04615", "110N04616", "110N04617"]
            energy_estimate:
              type: array
              items:
                type: number
                description: Energy consumption estimates for each road segment.
              example: [0.00123, 0.000124, 0.000128]
        output_metadata:
          type: object
          properties:
            Total Energy:
              type: number
              description: Measure of total energy consumed during the trip.
              example: 0.00375
            Energy Unit:
              type: string
              description: Unit of energy measurement
              example: "GGE"
            RouteE version:
              type: string
              description: Version of RouteE Powertrain used in the API.
              example: "v0.1.0"
            Vehicle description:
              type: string
              description: Vehicle model used in the energy estimation.
              example: "built_in_routee_gas_model"
            Data Dictionary:
              type: object
              properties:
                output_fields:
                  type: object
                  description: Explanation of the output fields in the resulting data.
                  properties:
                    energy_estimate:
                      type: string
                      description: Indication that this is the resulting segment-level energy estimation data.
                      example: "Resulting energy estimate array"
    NetworkResponse:
      type: object
      properties:
        network:
          type: object
          properties:
            your_input_ids:
              type: array
              items:
                type: string
                description: Unique identifiers for each road segement of the route. (Such as TMC codes)
              example: ["110N04615", "110N04616", "110N04617"]
            gasoline_total_energy:
              type: array
              items:
                type: number
                description: Conventional gasoline vehicle energy consumption estimates.
              example: [0.00123, 0.000124, 0.000128]
            diesel_total_energy:
              type: array
              items:
                type: number
                description: Diesel vehicle energy consumption estimates.
              example: [0.00123, 0.000124, 0.000128]
            hybrid_total_energy:
              type: array
              items:
                type: number
                description: Hybrid electric vehicle energy consumption estimates.
              example: [0.00123, 0.000124, 0.000128]
            electric_total_energy:
              type: array
              items:
                type: number
                description: Battery electric vehicle energy consumption estimates.
              example: [0.00123, 0.000124, 0.000128]
        output_metadata:
          type: object
          properties:
            Energy summary:
              type: object
              properties:
                Total BEV energy:
                  type: number
                  description: Total bettery electric vehicle energy consumed.
                  example: 0.00323
                Total HEV energy:
                  type: number
                  description: Total hybrid electric vehicle energy consumed.
                  example: 0.00654
                Total diesel energy:
                  type: number
                  description: Total diesel vehicle energy consumed.
                  example: 1.418
                Total energy: 
                  type: number
                  description: Total energy consumed.
                  example: 13.54132
                Total gasoline energy:
                  type: number
                  description: Total gasoline vehicle energy consumed.
                  example: 10.694
            Energy unit:
              type: string
              description: Unit of energy measurement
              example: "GGE"
            Data dictionary:
              type: object
              properties:
                output_fields:
                  type: object
                  description: Explanation of the output fields in the resulting data.
                  properties:
                    electric_total_energy:
                      type: string
                      description: Indication that this is the resulting segment-level BEV energy estimation data.
                      example: "Total BEV energy"
                    gasoline_total_energy:
                      type: string
                      description: Indication that this is the resulting segment-level gasoline vehicle energy estimation data.
                      example: "Total gasoline energy"
                    hybrid_total_energy:
                      type: string
                      description: Indication that this is the resulting segment-level HEV energy estimation data.
                      example: "Total HEV energy"
                    diesel_total_energy:
                      type: string
                      description: Indication that this is the resulting segment-level diesel vehicle energy estimation data.
                      example: "Total diesel energy"
            RouteE version:
              type: string
              description: Version of RouteE Powertrain used in the API.
              example: "v0.1.0"
            RouteE Models:
              type: object
              properties:
                BEV:
                  type: string
                  description: Description of RouteE BEV model used in the calculation.
                  example: "built_in_routee_bev_model"
                HEV:
                  type: string
                  description: Description of RouteE HEV model used in the calculation.
                  example: "built_in_routee_gev_model"
                Diesel:
                  type: string
                  description: Description of RouteE diesel vehicle model used in the calculation.
                  example: "built_in_routee_diesel_model"
                Conventional Gasoline:
                  type: string
                  description: Description of RouteE gasoline vehicle used in the calculation.
                  example: "built_in_routee_gas_model"
    CompassResponse:
      type: object
      properties:
        route:
          type: array
          items:
            type: array
            items:
              type: number
            description: Individual waypoints for the shortest energy path in [lat, lon]
          example: [[39.7540755, -104.9939502], [39.7540757, -104.9939507]]
security:
  - ApiKeyQueryAuth: []
  - ApiKeyHeaderAuth: []